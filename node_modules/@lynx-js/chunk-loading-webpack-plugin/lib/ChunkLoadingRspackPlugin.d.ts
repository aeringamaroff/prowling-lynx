import type { Compiler } from '@rspack/core';
/**
 * The options for ChunkLoadingRspackPlugin
 *
 * @public
 */
interface ChunkLoadingRspackPluginOptions {
}
/**
 * @public
 * The ChunkLoadingRspackPlugin enables chunk loading for webpack in Lynx.
 *
 * @remarks
 * Note that this plugin should be used with `output.chunkFormat: 'require'`.
 * See {@link https://github.com/web-infra-dev/rspack/issues/5365 | [Feature Request]: runtimeModule hook support} for details.
 *
 * @example
 *
 * ```js
 * // rspack.config.js
 * import { ChunkLoadingRspackPlugin } from '@lynx-js/chunk-loading-webpack-plugin'
 * export default {
 *   output: {
 *     chunkFormat: 'require',
 *   },
 *   plugins: [new ChunkLoadingRspackPlugin()],
 * }
 * ```
 *
 * @deprecated Use {@link ChunkLoadingWebpackPlugin} instead.
 */
declare class ChunkLoadingRspackPlugin {
    private readonly options;
    constructor(options?: Partial<ChunkLoadingRspackPluginOptions>);
    /**
     * `defaultOptions` is the default options that the {@link ChunkLoadingRspackPlugin} uses.
     *
     * @public
     */
    static defaultOptions: Readonly<Required<ChunkLoadingRspackPluginOptions>>;
    /**
     * The entry point of a webpack plugin.
     * @param compiler - the webpack compiler
     */
    apply(compiler: Compiler): void;
}
export { ChunkLoadingRspackPlugin };
export type { ChunkLoadingRspackPluginOptions };
export declare class ChunkLoadingRspackPluginImpl {
    #private;
    name: string;
    constructor(compiler: Compiler, _options: ChunkLoadingRspackPluginOptions);
}
