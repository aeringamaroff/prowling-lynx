export default function generateDevUrls(api, entry, schemaFn, port) {
    const { dev: { assetPrefix } } = api.getNormalizedConfig();
    const { config } = api.useExposed(Symbol.for('rspeedy.api'));
    if (typeof assetPrefix !== 'string') {
        const errorMsg = 'dev.assetPrefix is not string, skip printing QRCode';
        // Rspeedy will normalized dev.assetPrefix to string
        throw new Error(errorMsg);
    }
    const defaultFilename = '[name].[platform].bundle';
    const { filename } = config.output ?? {};
    let name;
    if (!filename) {
        name = defaultFilename;
    }
    else if (typeof filename === 'object') {
        name = filename.bundle ?? filename.template ?? defaultFilename;
    }
    else {
        name = filename;
    }
    const customSchema = schemaFn(new URL(name.replace('[name]', entry).replace('[platform]', 'lynx'), 
    // <port> is supported in `dev.assetPrefix`, we should replace it with the real port
    assetPrefix.replaceAll('<port>', String(port))).toString());
    return typeof customSchema === 'string'
        ? { default: customSchema }
        : customSchema;
}
//# sourceMappingURL=generateDevUrls.js.map