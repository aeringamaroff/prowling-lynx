import type { SnapshotPatch } from '../snapshotPatch.js';
declare let globalFlushOptions: FlushOptions;
declare const globalCommitTaskMap: Map<number, () => void>;
declare let nextCommitTaskId: number;
declare let globalBackgroundSnapshotInstancesToRemove: number[];
interface Patch {
    snapshotPatch?: SnapshotPatch;
    workletRefInitValuePatch?: [id: number, value: unknown][];
    flushOptions?: FlushOptions;
}
interface PatchOptions {
    commitTaskId: number;
    pipelineOptions?: PipelineOptions;
    reloadVersion?: number;
    isHydration?: boolean;
}
declare function injectUpdatePatch(): void;
declare function replaceCommitHook(): void;
declare function commitPatchUpdate(data: Patch, patchOptions: PatchOptions): Promise<void>;
declare function commitMainThreadPatchUpdate(commitTaskId?: number): void;
declare function genCommitTaskId(): number;
declare function replaceRequestAnimationFrame(): void;
export {};
