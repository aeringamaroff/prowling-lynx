import { WorkletEvents } from '@lynx-js/react/worklet-runtime/bindings';
import { onPostWorkletCtx } from './ctx.js';
import { enableRunOnBackground } from './functionality.js';
import { lynxWorkletJsImpl } from './jsImpl.js';
/**
 * transform args of `runOnJS()`.
 *
 * @internal
 */
export function transformToWorklet(obj) {
    const impl = lynxWorkletJsImpl();
    const id = impl ? ++impl._workletJsFnLastId : 0;
    if (typeof obj !== 'function') {
        // We save the error message in the object, so that we can throw it later when the function is called on the main thread.
        return {
            _jsFnId: id,
            _error: `Argument of runOnBackground should be a function, but got [${typeof obj}] instead`,
        };
    }
    return {
        _jsFnId: id,
        _fn: obj,
    };
}
/**
 * `runOnMainThread` allows triggering main thread functions on the main thread asynchronously.
 * @param fn - The main thread functions to be called.
 * @returns A function. Calling which with the arguments to be passed to the main thread function to trigger it on the main thread.
 * @public
 */
export function runOnMainThread(fn) {
    if (__LEPUS__) {
        throw new Error('runOnMainThread can only be used on the background thread.');
    }
    const impl = lynxWorkletJsImpl();
    if (!impl) {
        throw new Error('runOnMainThread requires Lynx sdk version 2.14.');
    }
    return (...params) => {
        onPostWorkletCtx(fn);
        lynx.getCoreContext().dispatchEvent({
            type: WorkletEvents.runWorkletCtx,
            data: JSON.stringify({
                worklet: fn,
                params,
            }),
        });
    };
}
/**
 * `runOnBackground` allows triggering js functions on the js context asynchronously.
 * @param f - The js function to be called.
 * @returns A function. Calling which with the arguments to be passed to the js function to trigger it on the js context.
 * @public
 */
export function runOnBackground(f) {
    if (!enableRunOnBackground()) {
        throw new Error('runOnBackground requires Lynx sdk version 2.16.');
    }
    if (__JS__) {
        throw new Error('runOnBackground can not be used on the main thread.');
    }
    const obj = f;
    if (obj._error) {
        throw new Error(obj._error);
    }
    return (...params) => {
        if (lynx.getJSContext) {
            lynx.getJSContext().dispatchEvent({
                type: WorkletEvents.runOnBackground,
                data: JSON.stringify({
                    obj: {
                        _jsFnId: obj._jsFnId,
                        _execId: obj._execId,
                    },
                    params,
                }),
            });
        }
    };
}
//# sourceMappingURL=runWorklet.js.map