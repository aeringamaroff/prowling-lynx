import type { Config } from './index.js';
export declare const resolveConfigPath: (root: string, customConfig?: string) => string;
/**
 * The options of loadConfig.
 *
 * @public
 */
export interface LoadConfigOptions {
    configPath?: string | undefined;
    cwd?: string | undefined;
}
/**
 * The result of {@link loadConfig}.
 *
 * @public
 */
export interface LoadConfigResult {
    /**
     * The configuration object that exported from the configuration file.
     *
     * @remarks
     *
     * The returned object has already been validated.
     */
    content: Config;
    /**
     * The configuration path that has been loaded.
     */
    configPath: string;
}
/**
 * Load the build config by the config path.
 *
 * @param loadConfigOptions - the options of `loadConfig` method.
 * @returns Build config.
 *
 * @example
 *
 * ```ts
 * import { loadConfig } from '@lynx-js/rspeedy'
 *
 * void async function () {
 *   const config = await loadConfig({ configPath: './lynx.config.js' })
 *   console.log(config);
 * }()
 * ```
 *
 * @public
 */
export declare function loadConfig(loadConfigOptions: LoadConfigOptions): Promise<LoadConfigResult>;
