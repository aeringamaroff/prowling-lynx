"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var process_exports = {};
__export(process_exports, {
  getMemoryUsage: () => getMemoryUsage,
  getMemoryUsageMessage: () => getMemoryUsageMessage
});
module.exports = __toCommonJS(process_exports);
var import_filesize = require("filesize");
var import_process = require("process");
function getMemoryUsage() {
  return (0, import_process.memoryUsage)();
}
function getMemoryUsageMessage() {
  const usage = getMemoryUsage();
  const msgs = [
    `RSS: ${(0, import_filesize.filesize)(usage.rss)}`,
    `Heap Total: ${(0, import_filesize.filesize)(usage.heapTotal)}`,
    `Heap Used: ${(0, import_filesize.filesize)(usage.heapUsed)}`
  ];
  if (usage.arrayBuffers) {
    msgs.push(`ArrayBuffers: ${(0, import_filesize.filesize)(usage.arrayBuffers)}`);
  }
  if (usage.external) {
    msgs.push(`External: ${(0, import_filesize.filesize)(usage.external)}`);
  }
  return `["${import_process.pid}" Memory Usage] ${msgs.join(", ")}`;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getMemoryUsage,
  getMemoryUsageMessage
});
