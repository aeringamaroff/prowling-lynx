/**
 * @internal
 */
function assertFunction() {
    halt("assertFunction");
}
/**
 * @internal
 */
function assertParameters() {
    halt("assertParameters");
}
/**
 * @internal
 */
function assertReturn() {
    halt("assertReturn");
}
/**
 * @internal
 */
function assertEqualsFunction() {
    halt("assertEqualsFunction");
}
/**
 * @internal
 */
function assertEqualsParameters() {
    halt("assertEqualsParameters");
}
/**
 * @internal
 */
function assertEqualsReturn() {
    halt("assertEqualsReturn");
}
/**
 * @internal
 */
function isFunction() {
    halt("isFunction");
}
/**
 * @internal
 */
function isParameters() {
    halt("isParameters");
}
/**
 * @internal
 */
function isReturn() {
    halt("isReturn");
}
/**
 * @internal
 */
function equalsFunction() {
    halt("equalsFunction");
}
/**
 * @internal
 */
function equalsParameters() {
    halt("equalsParameters");
}
/**
 * @internal
 */
function equalsReturn() {
    halt("equalsReturn");
}
/**
 * @internal
 */
function validateFunction() {
    halt("validateFunction");
}
/**
 * @internal
 */
function validateParameters() {
    halt("validateReturn");
}
/**
 * @internal
 */
function validateReturn() {
    halt("validateReturn");
}
/**
 * @internal
 */
function validateEqualsFunction() {
    halt("validateEqualsFunction");
}
/**
 * @internal
 */
function validateEqualsParameters() {
    halt("validateEqualsParameters");
}
/**
 * @internal
 */
function validateEqualsReturn() {
    halt("validateEqualsReturn");
}
/* -----------------------------------------------------------
  HALTER
----------------------------------------------------------- */
/**
 * @internal
 */
function halt(name) {
    throw new Error(`Error on typia.functional.${name}(): no transform has been configured. Read and follow https://typia.io/docs/setup please.`);
}

export { assertEqualsFunction, assertEqualsParameters, assertEqualsReturn, assertFunction, assertParameters, assertReturn, equalsFunction, equalsParameters, equalsReturn, isFunction, isParameters, isReturn, validateEqualsFunction, validateEqualsParameters, validateEqualsReturn, validateFunction, validateParameters, validateReturn };
//# sourceMappingURL=functional.mjs.map
