/**
 * @internal
 */
function schemas() {
    halt("schemas");
}
/**
 * @internal
 */
function application() {
    halt("application");
}
/**
 * @internal
 */
function assertParse() {
    halt("assertParse");
}
/**
 * @internal
 */
function isParse() {
    halt("isParse");
}
/**
 * @internal
 */
function validateParse() {
    halt("validateParse");
}
/**
 * @internal
 */
function stringify() {
    halt("stringify");
}
/**
 * @internal
 */
function assertStringify() {
    halt("assertStringify");
}
/**
 * @internal
 */
function isStringify() {
    halt("isStringify");
}
/**
 * @internal
 */
function validateStringify() {
    halt("validateStringify");
}
/**
 * @internal
 */
function createIsParse() {
    halt("createIsParse");
}
/**
 * @internal
 */
function createAssertParse() {
    halt("createAssertParse");
}
/**
 * @internal
 */
function createValidateParse() {
    halt("createValidateParse");
}
/**
 * @internal
 */
function createStringify() {
    halt("createStringify");
}
/**
 * @internal
 */
function createAssertStringify() {
    halt("createAssertStringify");
}
/**
 * @internal
 */
function createIsStringify() {
    halt("createIsStringify");
}
/**
 * @internal
 */
function createValidateStringify() {
    halt("createValidateStringify");
}
/**
 * @internal
 */
function halt(name) {
    throw new Error(`Error on typia.json.${name}(): no transform has been configured. Read and follow https://typia.io/docs/setup please.`);
}

export { application, assertParse, assertStringify, createAssertParse, createAssertStringify, createIsParse, createIsStringify, createStringify, createValidateParse, createValidateStringify, isParse, isStringify, schemas, stringify, validateParse, validateStringify };
//# sourceMappingURL=json.mjs.map
