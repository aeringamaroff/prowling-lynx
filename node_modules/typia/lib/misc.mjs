/**
 * @internal
 */
function literals() {
    halt("literals");
}
/**
 * @internal
 */
function clone() {
    halt("clone");
}
/**
 * @internal
 */
function assertClone() {
    halt("assertClone");
}
/**
 * @internal
 */
function isClone() {
    halt("isClone");
}
/**
 * @internal
 */
function validateClone() {
    halt("validateClone");
}
/**
 * @internal
 */
function prune() {
    halt("prune");
}
/**
 * @internal
 */
function assertPrune() {
    halt("assertPrune");
}
/**
 * @internal
 */
function isPrune() {
    halt("isPrune");
}
/**
 * @internal
 */
function validatePrune() {
    halt("validatePrune");
}
/**
 * @internal
 */
function createClone() {
    halt("createClone");
}
/**
 * @internal
 */
function createAssertClone() {
    halt("createAssertClone");
}
/**
 * @internal
 */
function createIsClone() {
    halt("createIsClone");
}
/**
 * @internal
 */
function createValidateClone() {
    halt("createValidateClone");
}
/**
 * @internal
 */
function createPrune() {
    halt("createPrune");
}
/**
 * @internal
 */
function createAssertPrune() {
    halt("createAssertPrune");
}
/**
 * @internal
 */
function createIsPrune() {
    halt("createIsPrune");
}
/**
 * @internal
 */
function createValidatePrune() {
    halt("createValidatePrune");
}
/**
 * @internal
 */
function halt(name) {
    throw new Error(`Error on typia.misc.${name}(): no transform has been configured. Read and follow https://typia.io/docs/setup please.`);
}

export { assertClone, assertPrune, clone, createAssertClone, createAssertPrune, createClone, createIsClone, createIsPrune, createPrune, createValidateClone, createValidatePrune, isClone, isPrune, literals, prune, validateClone, validatePrune };
//# sourceMappingURL=misc.mjs.map
