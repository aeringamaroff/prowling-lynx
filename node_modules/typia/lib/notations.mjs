/**
 * @internal
 */
function camel() {
    return halt("camel");
}
/**
 * @internal
 */
function assertCamel() {
    return halt("assertCamel");
}
/**
 * @internal
 */
function isCamel() {
    return halt("isCamel");
}
/**
 * @internal
 */
function validateCamel() {
    return halt("validateCamel");
}
/**
 * @internal
 */
function pascal() {
    return halt("pascal");
}
/**
 * @internal
 */
function assertPascal() {
    return halt("assertPascal");
}
/**
 * @internal
 */
function isPascal() {
    return halt("isPascal");
}
/**
 * @internal
 */
function validatePascal() {
    return halt("validatePascal");
}
/**
 * @internal
 */
function snake() {
    return halt("snake");
}
/**
 * @internal
 */
function assertSnake() {
    return halt("assertSnake");
}
/**
 * @internal
 */
function isSnake() {
    return halt("isSnake");
}
/**
 * @internal
 */
function validateSnake() {
    return halt("validateSnake");
}
/**
 * @internal
 */
function createCamel() {
    halt("createCamel");
}
/**
 * @internal
 */
function createAssertCamel() {
    halt("createAssertCamel");
}
/**
 * @internal
 */
function createIsCamel() {
    halt("createIsCamel");
}
/**
 * @internal
 */
function createValidateCamel() {
    halt("createValidateCamel");
}
/**
 * @internal
 */
function createPascal() {
    halt("createPascal");
}
/**
 * @internal
 */
function createAssertPascal() {
    halt("createAssertPascal");
}
/**
 * @internal
 */
function createIsPascal() {
    halt("createIsPascal");
}
/**
 * @internal
 */
function createValidatePascal() {
    halt("createValidatePascal");
}
/**
 * @internal
 */
function createSnake() {
    halt("createSnake");
}
/**
 * @internal
 */
function createAssertSnake() {
    halt("createAssertSnake");
}
/**
 * @internal
 */
function createIsSnake() {
    halt("createIsSnake");
}
/**
 * @internal
 */
function createValidateSnake() {
    halt("createValidateSnake");
}
/**
 * @internal
 */
function halt(name) {
    throw new Error(`Error on typia.notations.${name}(): no transform has been configured. Read and follow https://typia.io/docs/setup please.`);
}

export { assertCamel, assertPascal, assertSnake, camel, createAssertCamel, createAssertPascal, createAssertSnake, createCamel, createIsCamel, createIsPascal, createIsSnake, createPascal, createSnake, createValidateCamel, createValidatePascal, createValidateSnake, isCamel, isPascal, isSnake, pascal, snake, validateCamel, validatePascal, validateSnake };
//# sourceMappingURL=notations.mjs.map
