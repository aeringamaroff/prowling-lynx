import { ILlmSchema } from "@samchon/openapi";
import ts from "typescript";
import { ILlmApplicationOfValidate } from "../../schemas/llm/ILlmApplicationOfValidate";
import { Metadata } from "../../schemas/metadata/Metadata";
import { ITypiaContext } from "../../transformers/ITypiaContext";
export declare namespace LlmApplicationOfValidateProgrammer {
    const validate: <Model extends ILlmSchema.Model>(props: {
        model: Model;
        config?: Partial<ILlmSchema.ModelConfig[Model]>;
    }) => (metadata: Metadata, explore: import("../../factories/MetadataFactory").MetadataFactory.IExplore) => string[];
    const write: <Model extends ILlmSchema.Model>(props: {
        context: ITypiaContext;
        modulo: ts.LeftHandSideExpression;
        model: Model;
        metadata: Metadata;
        config?: Partial<ILlmSchema.ModelConfig[Model]>;
        name?: string;
    }) => ILlmApplicationOfValidate<Model>;
}
