/**
 * @internal
 */
function message() {
    halt("message");
}
/**
 * @internal
 */
function decode() {
    halt("decode");
}
/**
 * @internal
 */
function assertDecode() {
    halt("assertDecode");
}
/**
 * @internal
 */
function isDecode() {
    halt("isDecode");
}
/**
 * @internal
 */
function validateDecode() {
    halt("validateDecode");
}
/**
 * @internal
 */
function encode() {
    halt("encode");
}
/**
 * @internal
 */
function assertEncode() {
    halt("assertEncode");
}
/**
 * @internal
 */
function isEncode() {
    halt("isEncode");
}
/**
 * @internal
 */
function validateEncode() {
    halt("validateEncode");
}
/**
 * @internal
 */
function createDecode() {
    halt("createDecode");
}
/**
 * @internal
 */
function createIsDecode() {
    halt("createIsDecode");
}
/**
 * @internal
 */
function createAssertDecode() {
    halt("createAssertDecode");
}
/**
 * @internal
 */
function createValidateDecode() {
    halt("createValidateDecode");
}
/**
 * @internal
 */
function createEncode() {
    halt("createEncode");
}
/**
 * @internal
 */
function createIsEncode() {
    halt("createIsEncode");
}
/**
 * @internal
 */
function createAssertEncode() {
    halt("createAssertEncode");
}
/**
 * @internal
 */
function createValidateEncode() {
    halt("createValidateEncode");
}
/**
 * @internal
 */
function halt(name) {
    throw new Error(`Error on typia.protobuf.${name}(): no transform has been configured. Read and follow https://typia.io/docs/setup please.`);
}

export { assertDecode, assertEncode, createAssertDecode, createAssertEncode, createDecode, createEncode, createIsDecode, createIsEncode, createValidateDecode, createValidateEncode, decode, encode, isDecode, isEncode, message, validateDecode, validateEncode };
//# sourceMappingURL=protobuf.mjs.map
